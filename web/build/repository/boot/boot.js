function mainDirsReady(a,b){env.OBU="/winnies/system/winnies/objectUris/",env.TMP="/tmp/",logging("Environment variables are set");for(key in env)BVFS.sh.env.set(key,env[key]);logging("Running pre installer..."),console.log("URL: "+BVFS.host.origin+"/build/repository"),BVFS.install(BVFS.host.origin+"/build/repository",function(a,b,c,d,e){a?console.error(a):logging("New preinstalled.json downloaded..."),BVFS.fs.unlink(env.TMP+"boot.js",function(a){callback(a,b,c,d,e)})})}function logging(a){doLog&&console.log("Bootscript :: "+a)}var doLog=!0,BVFS=args;logging("v1.0.0 running");var env={WIN:"/winnies/",SYS:"/winnies/system/",APP:"/winnies/apps/",WID:"/winnies/widgets/",TPL:"/winnies/templates/",API:"/winnies/apis/",DIA:"/winnies/dialogs/",THE:"/winnies/themes/",WAL:"/winnies/wallpapers/",PLU:"/winnies/plugins/",HOM:"/home/"};BVFS.fs.mkdir(env.WIN,null,function(a){if(a)logging("Winnies directory is present"),mainDirsReady(null,"Winnies system is present");else{var b=Object.keys(env).length,c=0;for(key in env)logging(env[key]+" created"),BVFS.fs.mkdir(env[key],null,function(a){c+=1,c>=b&&mainDirsReady(null,"bootscript ready..")})}});